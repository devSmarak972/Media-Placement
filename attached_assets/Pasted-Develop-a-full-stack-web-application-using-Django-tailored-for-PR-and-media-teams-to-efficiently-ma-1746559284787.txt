Develop a full-stack web application using Django, tailored for PR and media teams to efficiently manage media placements. The application should facilitate the input of media placement links through various methods, including direct text input, Google Docs, and Google Sheets. Implement a system to parse these links using regular expressions to extract relevant information. Initially, the application should prompt users to provide a Google API Key or authenticate via OAuth to enable access to Google Sheets and Google Docs. Upon receiving a media placement link, the application should scrape the linked content to extract key details such as the article title, media outlet, publication date, a brief snippet of the article, and the sentiment expressed within the article. The extracted data should be organized and stored in a Google Sheet, with each row representing a media placement and containing the following fields: ID, Date of Publication, Product/Client Name, Media Outlet, Article Title, Placement Type (e.g., article, mention, review), Snippet of the Article, Article Link, Sentiment Analysis Result (e.g., positive, negative, neutral), Key Messages Highlighted, Reach Metrics, Engagement Metrics, Link to the Generated Google Doc, and any Additional Notes or Tags. For each media placement, the application should automatically generate a Google Doc that includes the Client Name, Media Outlet, Publication Date, Article Title along with a direct URL link, a Snippet of the Article, an optional Screenshot of the article, the Sentiment Analysis result, Key Messages, and any relevant Notes. Each generated Google Doc should be linked back to its corresponding row in the Google Sheet. The application should feature a user-friendly dashboard interface, providing functionalities for inputting media placement links, tracking the status of each placement, and exporting the collected data. Utilize Celery for asynchronous scraping tasks to ensure efficient background processing, and integrate a library such as newspaper3k or a similar tool for parsing the content of the media placement links. Implement the Google Sheets and Google Docs APIs for seamless integration with Google services.

